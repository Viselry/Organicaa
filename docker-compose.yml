version: '3.8'
services:
  postgres:
    image: postgres:15
    restart: always
    hostname: postgres
    environment:
      POSTGRES_DB: organica
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./init:/docker-entrypoint-initdb.d
      - ./backup_db.sql:/docker-entrypoint-initdb.d/backup_db.sql
    ports:
      - "5452:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kafka-net

  pgadmin:
    image: dpage/pgadmin4:8.4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@organica.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8888:80"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - kafka-net

  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kafka-net

  backend:
    build:
      context: ./Server
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/organica
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
    ports:
      - 9090:9090
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - kafka-net

  frontend:
    build:
      context: ./Client
      dockerfile: Dockerfile
    ports:
      - 3000:80
    depends_on:
      - backend
    networks:
      - kafka-net

volumes:
  pgadmin_data:

networks:
  kafka-net:
    driver: bridge
