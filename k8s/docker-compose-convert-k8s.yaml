apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - env:
        - name: POSTGRES_DB
          value: organica
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: postgres
        image: postgres:15
        name: postgres
        ports:
        - containerPort: 5432

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  ports:
  - port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    app: postgres
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - image: redis:7
        name: redis
        ports:
        - containerPort: 6379

---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  ports:
  - port: 6379
    protocol: TCP
    targetPort: 6379
  selector:
    app: redis
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
      - env:
        - name: ZOOKEEPER_CLIENT_PORT
          value: '2181'
        - name: ZOOKEEPER_TICK_TIME
          value: '2000'
        image: confluentinc/cp-zookeeper:7.4.1
        name: zookeeper
        ports:
        - containerPort: 2181

---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
spec:
  ports:
  - port: 2181
    protocol: TCP
    targetPort: 2181
  selector:
    app: zookeeper
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - env:
        - name: KAFKA_BROKER_ID
          value: '1'
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper:2181
        - name: KAFKA_ADVERTISED_LISTENERS
          value: PLAINTEXT://kafka:9092
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: PLAINTEXT
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: '1'
        - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
          value: '0'
        - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
          value: '1'
        - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          value: '1'
        - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
          value: 'true'
        image: confluentinc/cp-kafka:7.4.1
        name: kafka
        ports:
        - containerPort: 9092

---
apiVersion: v1
kind: Service
metadata:
  name: kafka
spec:
  ports:
  - port: 9092
    protocol: TCP
    targetPort: 9092
  selector:
    app: kafka
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-ui-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-ui
  template:
    metadata:
      labels:
        app: kafka-ui
    spec:
      containers:
      - env:
        - name: KAFKA_CLUSTERS_0_NAME
          value: local
        - name: KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS
          value: kafka:29092
        - name: KAFKA_CLUSTERS_0_ZOOKEEPER
          value: zookeeper:2181
        - name: SERVER_SERVLET_CONTEXT_PATH
          value: /
        image: provectuslabs/kafka-ui:latest
        name: kafka-ui
        ports:
        - containerPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: kafka-ui
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: kafka-ui
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kowl-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kowl
  template:
    metadata:
      labels:
        app: kowl
    spec:
      containers:
      - env:
        - name: KAFKA_BROKERS
          value: kafka:29092
        - name: KAFKA_TLS_ENABLED
          value: 'false'
        - name: SERVER_LISTENPORT
          value: '8080'
        image: quay.io/cloudhut/kowl:v1.5.0
        name: kowl
        ports:
        - containerPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: kowl
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: kowl
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgadmin-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pgadmin
  template:
    metadata:
      labels:
        app: pgadmin
    spec:
      containers:
      - env:
        - name: PGADMIN_DEFAULT_EMAIL
          value: admin@organica.com
        - name: PGADMIN_DEFAULT_PASSWORD
          value: admin
        image: dpage/pgadmin4:8.4
        name: pgadmin
        ports:
        - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: pgadmin
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: pgadmin
  type: ClusterIP

---
